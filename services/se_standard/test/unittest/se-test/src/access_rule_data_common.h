/*
 * Copyright (C) 2021 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <string>

static const std::string STRING_RESPONSE_ALL_AR_DO_TAG = {(char)0xFF, 0x40};
static const std::string STRING_REF_AR_DO_TAG = {(char)0xE2};
static const std::string STRING_AID_REF_DO_TAG = {(char)0x4F};

// Ref-Do
static const std::string REF_DO_A1_H1 = {
    (char)0xE1, 0x21,       0x4F,       0x09,       (char)0xA0, 0x00,       0x00,       0x01, 0x51,
    0x43,       0x52,       0x53,       0x00,       (char)0xC1, 0x14,       0x53,       0x6C, 0x79,
    (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,       (char)0xAE, 0x36, 0x5D,
    (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x35};
static const std::string REF_DO_A1_H2 = {
    (char)0xE1, 0x21,       0x4F,       0x09,       (char)0xA0, 0x00,       0x00,       0x01,       0x51,
    0x43,       0x52,       0x53,       0x00,       (char)0xC1, 0x14,       0x05,       (char)0x9E, 0x24,
    (char)0x80, (char)0xAD, (char)0xF8, (char)0xC1, (char)0xC5, (char)0xB3, (char)0xD9, (char)0xEC, 0x00,
    0x76,       0x45,       (char)0xCC, (char)0xFC, 0x44,       0x2A,       0x23,       (char)0xC5};
static const std::string REF_DO_A2_H1 = {
    (char)0xE1, 0x28,       0x4F,       0x10,       (char)0xA0, 0x00, 0x00, 0x03,       0x33,
    0x00,       0x53,       0x44,       0x01,       0x21,       0x56, 0x11, 0x26,       0x24,
    0x10,       0x00,       (char)0xC1, 0x14,       0x53,       0x6C, 0x79, (char)0xB9, 0x3A,
    (char)0xCF, (char)0xBE, (char)0xA9, 0x50,       (char)0xAE, 0x36, 0x5D, (char)0x8C, (char)0xE1,
    (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x35};
static const std::string REF_DO_A3_H3 = {
    (char)0xE1, 0x1E,       (char)0x4F, 0x06,       (char)0xFF, (char)0x11, (char)0xFF, (char)0x11,
    (char)0xFF, (char)0x11, (char)0xC1, 0x14,       0x53,       0x6C,       0x79,       (char)0xB9,
    0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,       (char)0xAE, 0x36,       0x5D,
    (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x36};
static const std::string REF_DO_SHA256 = {
    (char)0xE1, 0x29,       0x4F,       0x05,       (char)0xA0, 0x00,       0x00,       0x00,       0x00,
    (char)0xC1, 0x20,       0x53,       0x6C,       0x79,       (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE,
    (char)0xA9, 0x50,       (char)0xAE, 0x36,       0x5D,       (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9,
    0x1F,       (char)0xEA, (char)0x95, 0x35,       0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,
    (char)0xAE, 0x36,       0x5D,       (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9};
static const std::string REF_DO_AID_ALL = {
    (char)0xE1, 0x18,       (char)0xC0, 0x00,       (char)0xC1, 0x14,       0x05,       (char)0x9E, 0x24,
    (char)0x80, (char)0xAD, (char)0xF8, (char)0xC1, (char)0xC5, (char)0xB3, (char)0xD9, (char)0xEC, 0x00,
    0x76,       0x45,       (char)0xCC, (char)0xFC, 0x44,       0x2A,       0x23,       (char)0xC6};
static const std::string REF_DO_HASH_ALL = {(char)0xE1, 0x14, 0x4F, 0x10, (char)0xA0, 0x00, 0x00, 0x03,
                                            0x33,       0x01, 0x01, 0x02, 0x00,       0x63, 0x48, 0x57,
                                            0x50,       0x41, 0x59, 0x05, (char)0xC1, 0x00};
static const std::string REF_DO_HASH_ALL_2 = {(char)0xE1, 0x14, 0x4F, 0x10, (char)0xA0, 0x00, 0x00, 0x03,
                                              0x33,       0x01, 0x01, 0x02, 0x00,       0x63, 0x48, 0x57,
                                              0x50,       0x41, 0x59, 0x06, (char)0xC1, 0x00};
static const std::string REF_DO_HASHALLAID_AIDALLHASH = {
    (char)0xE1, 0x28,       0x4F,       0x10,       (char)0xA0, 0x00,       0x00, 0x03,       0x33,
    0x01,       0x01,       0x02,       0x00,       0x63,       0x48,       0x57, 0x50,       0x41,
    0x59,       0x05,       (char)0xC1, 0x14,       0x05,       (char)0x9E, 0x24, (char)0x80, (char)0xAD,
    (char)0xF8, (char)0xC1, (char)0xC5, (char)0xB3, (char)0xD9, (char)0xEC, 0x00, 0x76,       0x45,
    (char)0xCC, (char)0xFC, 0x44,       0x2A,       0x23,       (char)0xC6};
static const std::string REF_DO_AID_ALL_HASH_ALL = {(char)0xE1, 0x04, (char)0xC0, 0x00, (char)0xC1, 0x00};

// Aid-Do
static const std::string AID_DO_1 = {0x4F, 0x09, (char)0xA0, 0x00, 0x00, 0x01, 0x51, 0x43, 0x52, 0x53, 0x00};
static const std::string AID_1 = {(char)0xA0, 0x00, 0x00, 0x01, 0x51, 0x43, 0x52, 0x53, 0x00};
static const std::string AID_DO_2 = {
    0x4F, 0x10, (char)0xA0, 0x00, 0x00, 0x03, 0x33, 0x00, 0x53, 0x44, 0x01, 0x21, 0x56, 0x11, 0x26, 0x24, 0x10, 0x00};
static const std::string AID_2 = {
    (char)0xA0, 0x00, 0x00, 0x03, 0x33, 0x00, 0x53, 0x44, 0x01, 0x21, 0x56, 0x11, 0x26, 0x24, 0x10, 0x00};
static const std::string AID_DO_3 = {
    (char)0x4F, 0x06, (char)0xFF, (char)0x11, (char)0xFF, (char)0x11, (char)0xFF, (char)0x11};
static const std::string AID_3 = {(char)0xFF, (char)0x11, (char)0xFF, (char)0x11, (char)0xFF, (char)0x11};
static const std::string AID_DO_SHA256 = {0x4F, 0x05, (char)0xA0, 0x00, 0x00, 0x00, 0x00};
static const std::string AID_SHA256 = {(char)0xA0, 0x00, 0x00, 0x00, 0x00};
static const std::string AID_DO_AID_ALL = {(char)0xC0, 0x00};
static const std::string AID_AID_ALL = {};
static const std::string AID_DO_HASH_ALL = {
    0x4F, 0x10, (char)0xA0, 0x00, 0x00, 0x03, 0x33, 0x01, 0x01, 0x02, 0x00, 0x63, 0x48, 0x57, 0x50, 0x41, 0x59, 0x05};
static const std::string AID_HASH_ALL = {
    (char)0xA0, 0x00, 0x00, 0x03, 0x33, 0x01, 0x01, 0x02, 0x00, 0x63, 0x48, 0x57, 0x50, 0x41, 0x59, 0x05};
static const std::string AID_DO_HASH_ALL_2 = {
    0x4F, 0x10, (char)0xA0, 0x00, 0x00, 0x03, 0x33, 0x01, 0x01, 0x02, 0x00, 0x63, 0x48, 0x57, 0x50, 0x41, 0x59, 0x06};
static const std::string AID_HASH_ALL_2 = {
    (char)0xA0, 0x00, 0x00, 0x03, 0x33, 0x01, 0x01, 0x02, 0x00, 0x63, 0x48, 0x57, 0x50, 0x41, 0x59, 0x06};
static const std::string AID_DO_AID_ALL_HASH_ALL = {(char)0xC0, 0x00};
static const std::string AID_AID_ALL_HASH_ALL = {};

// Hash-Do
static const std::string HASH_DO_1 = {
    (char)0xC1, 0x14, 0x53, 0x6C,       0x79,       (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,
    (char)0xAE, 0x36, 0x5D, (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x35};
static const std::string HASH_1 = {0x53,       0x6C,       0x79,       (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE,
                                   (char)0xA9, 0x50,       (char)0xAE, 0x36,       0x5D,       (char)0x8C, (char)0xE1,
                                   (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x35};
static const std::string HASH_DO_2 = {(char)0xC1, 0x14,       0x05,       (char)0x9E, 0x24,       (char)0x80,
                                      (char)0xAD, (char)0xF8, (char)0xC1, (char)0xC5, (char)0xB3, (char)0xD9,
                                      (char)0xEC, 0x00,       0x76,       0x45,       (char)0xCC, (char)0xFC,
                                      0x44,       0x2A,       0x23,       (char)0xC5};
static const std::string HASH_2 = {0x05,       (char)0x9E, 0x24,       (char)0x80, (char)0xAD, (char)0xF8, (char)0xC1,
                                   (char)0xC5, (char)0xB3, (char)0xD9, (char)0xEC, 0x00,       0x76,       0x45,
                                   (char)0xCC, (char)0xFC, 0x44,       0x2A,       0x23,       (char)0xC5};
static const std::string HASH_DO_3 = {
    (char)0xC1, 0x14, 0x53, 0x6C,       0x79,       (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,
    (char)0xAE, 0x36, 0x5D, (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x36};
static const std::string HASH_3 = {0x53,       0x6C,       0x79,       (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE,
                                   (char)0xA9, 0x50,       (char)0xAE, 0x36,       0x5D,       (char)0x8C, (char)0xE1,
                                   (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x36};
static const std::string HASH_DO_SHA256 = {
    (char)0xC1, 0x20,       0x53,       0x6C,       0x79,       (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE,
    (char)0xA9, 0x50,       (char)0xAE, 0x36,       0x5D,       (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9,
    0x1F,       (char)0xEA, (char)0x95, 0x35,       0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,
    (char)0xAE, 0x36,       0x5D,       (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9};
static const std::string HASH_SHA256 = {
    0x53, 0x6C,       0x79,       (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE, (char)0xA9,
    0x50, (char)0xAE, 0x36,       0x5D,       (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9,
    0x1F, (char)0xEA, (char)0x95, 0x35,       0x3A,       (char)0xCF, (char)0xBE, (char)0xA9,
    0x50, (char)0xAE, 0x36,       0x5D,       (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9};
static const std::string HASH_DO_AID_ALL = {(char)0xC1, 0x14,       0x05,       (char)0x9E, 0x24,       (char)0x80,
                                            (char)0xAD, (char)0xF8, (char)0xC1, (char)0xC5, (char)0xB3, (char)0xD9,
                                            (char)0xEC, 0x00,       0x76,       0x45,       (char)0xCC, (char)0xFC,
                                            0x44,       0x2A,       0x23,       (char)0xC6};
static const std::string HASH_AID_ALL = {
    0x05,       (char)0x9E, 0x24, (char)0x80, (char)0xAD, (char)0xF8, (char)0xC1, (char)0xC5, (char)0xB3, (char)0xD9,
    (char)0xEC, 0x00,       0x76, 0x45,       (char)0xCC, (char)0xFC, 0x44,       0x2A,       0x23,       (char)0xC6};
static const std::string HASH_DO_HASH_ALL = {(char)0xC1, 0x00};
static const std::string HASH_HASH_ALL = {};
static const std::string HASH_DO_HASH_ALL_2 = {(char)0xC1, 0x00};
static const std::string HASH_HASH_ALL_2 = {};
static const std::string HASH_DO_AID_ALL_HASH_ALL = {(char)0xC1, 0x00};
static const std::string HASH_AID_ALL_HASH_ALL = {};

// Ar-Do
static const std::string APDU_1 = {(char)0x80, (char)0xCA, 0x00, 0x00, (char)0xFF, (char)0xFF, (char)0x00, (char)0x00};
static const std::string APDU_2 = {(char)0x80, (char)0xF2, 0x00, 0x00, (char)0xFF, (char)0xFF, (char)0xFF, (char)0xFF};
static const std::string APDU_3 = {(char)0x80, (char)0xF2, 0x00, 0x02, (char)0xFF, (char)0xFF, (char)0xFF, (char)0xFF};
static const std::string AR_DO_DATA_11 = {(char)0xE3, 0x06, (char)0xD0, 0x01, 0x01, (char)0xD1, 0x01, 0x01};
static const std::string AR_DO_DATA_01 = {(char)0xE3, 0x06, (char)0xD0, 0x01, 0x00, (char)0xD1, 0x01, 0x01};
static const std::string AR_DO_DATA_10 = {(char)0xE3, 0x06, (char)0xD0, 0x01, 0x01, (char)0xD1, 0x01, 0x00};
static const std::string AR_DO_DATA_00 = {(char)0xE3, 0x06, (char)0xD0, 0x01, 0x00, (char)0xD1, 0x01, 0x00};
static const std::string AR_DO_DATA_ONLY_APDU_ALWAYS = {(char)0xE3, 0x03, (char)0xD0, 0x01, 0x01};
static const std::string AR_DO_DATA_ONLY_APDU_NEVER = {(char)0xE3, 0x03, (char)0xD0, 0x01, 0x00};
static const std::string AR_DO_DATA_ONLY_APDU_FILTER = {(char)0xE3,
                                                        0x0A,
                                                        (char)0xD0,
                                                        0x08,
                                                        (char)0x80,
                                                        (char)0xCA,
                                                        0x00,
                                                        0x00,
                                                        (char)0xFF,
                                                        (char)0xFF,
                                                        (char)0x00,
                                                        (char)0x00};
static const std::string AR_DO_DATA_ONLY_APDU_FILTER_2 = {(char)0xE3, 0x12,       (char)0xD0, 0x10,       (char)0x80,
                                                          (char)0xF2, 0x00,       0x00,       (char)0xFF, (char)0xFF,
                                                          (char)0xFF, (char)0xFF, (char)0x80, (char)0xF2, 0x00,
                                                          0x02,       (char)0xFF, (char)0xFF, (char)0xFF, (char)0xFF};
static const std::string AR_DO_DATA_ONLY_NFC_ALWAYS = {(char)0xE3, 0x03, (char)0xD1, 0x01, 0x01};
static const std::string AR_DO_DATA_ONLY_NFC_NEVER = {(char)0xE3, 0x03, (char)0xD1, 0x01, 0x00};
static const std::string AR_DO_DATA_APDU_FILTER = {(char)0xE3,
                                                   0x0D,
                                                   (char)0xD0,
                                                   0x08,
                                                   (char)0x80,
                                                   (char)0xCA,
                                                   0x00,
                                                   0x00,
                                                   (char)0xFF,
                                                   (char)0xFF,
                                                   (char)0x00,
                                                   (char)0x00,
                                                   (char)0xD1,
                                                   0x01,
                                                   0x01};
static const std::string AR_DO_DATA_APDU_FILTER_2 = {(char)0xE3,
                                                     0x0D,
                                                     (char)0xD0,
                                                     0x08,
                                                     (char)0x80,
                                                     (char)0xF2,
                                                     0x00,
                                                     0x00,
                                                     (char)0xFF,
                                                     (char)0xFF,
                                                     (char)0xFF,
                                                     (char)0xFF,
                                                     (char)0xD1,
                                                     0x01,
                                                     0x01};

// Response refresh tag
static const std::string RESPONSE_REFRESH_TAG_DO = {
    (char)0xDF, 0x20, 0x08, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};
static const std::string RESPONSE_REFRESH_TAG = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};

// DIR
static const std::string DIR_DATA = {0x61, 0x22, 0x4F, 0x0C, (char)0xA0, 0x00, 0x00, 0x00, 0x63, 0x50, 0x4B, 0x43,
                                     0x53, 0x2D, 0x31, 0x35, 0x50,       0x0C, 0x50, 0x52, 0x4F, 0x56, 0x49, 0x53,
                                     0x49, 0x4F, 0x4E, 0x49, 0x4E,       0x47, 0x51, 0x04, 0x3F, 0x00, 0x7F, 0x50};
static const std::string ODF_PATH = {0x3F, 0x00, 0x7F, 0x50};
static const std::string DIR_AID = {(char)0xA0, 0x00, 0x00, 0x00, 0x63, 0x50, 0x4B, 0x43, 0x53, 0x2D, 0x31, 0x35};
static const std::string DIR_DATA_WRONG_TAG = {
    0x61, 0x22, 0x4F, 0x0C, (char)0xA0, 0x00, 0x00, 0x00, 0x63, 0x50, 0x4B, 0x43, 0x53, 0x2D, 0x31, 0x35, 0x5F, 0x0C,
    0x50, 0x52, 0x4F, 0x56, 0x49,       0x53, 0x49, 0x4F, 0x4E, 0x49, 0x4E, 0x47, 0x51, 0x04, 0x3F, 0x00, 0x7F, 0x50};
// ODF
static const std::string ODF_DATA = {
    (char)0xA5, 0x06, 0x30, 0x04, 0x04, 0x02, 0x52, 0x05, (char)0xA7, 0x06, 0x30, 0x04, 0x04, 0x02, 0x52, 0x07};
static const std::string DODF_PATH = {0x52, 0x07};
static const std::string ODF_DATA_UNKNOWN = {(char)0xA5, 0x06, 0x30, 0x04, 0x04, 0x02, 0x52, 0x05};
// DODF
static const std::string DODF_DATA = {
    (char)0xA1, 0x29, 0x30, 0x00, 0x30, 0x0F, 0x0C,       0x0D, 0x47,       0x50,       0x20,
    0x53,       0x45, 0x20, 0x41, 0x63, 0x63, 0x20,       0x43, 0x74,       0x6C,       (char)0xA1,
    0x14,       0x30, 0x12, 0x06, 0x0A, 0x2A, (char)0x86, 0x48, (char)0x86, (char)0xFC, 0x6B,
    (char)0x81, 0x48, 0x01, 0x01, 0x30, 0x04, 0x04,       0x02, 0x42,       0x00};
static const std::string ACCESS_CONTROL_MAIN_PATH = {0x42, 0x00};
static const std::string DODF_DATA_DIFF_OID = {
    (char)0xA1, 0x29, 0x30, 0x00, 0x30, 0x0F, 0x0C,       0x0D, 0x47,       0x50,       0x20,
    0x53,       0x45, 0x20, 0x41, 0x63, 0x63, 0x20,       0x43, 0x74,       0x6C,       (char)0xA1,
    0x14,       0x30, 0x12, 0x06, 0x0A, 0x2A, (char)0x86, 0x48, (char)0x86, (char)0xFC, 0x6B,
    (char)0x81, 0x48, 0x01, 0x02, 0x30, 0x04, 0x04,       0x02, 0x42,       0x00};
static const std::string DODF_DATA_NO_OID_TAG = {
    (char)0xA0, 0x00, (char)0xA1, 0x17, 0x30, 0x00, 0x30, 0x0F, 0x0C, 0x0D,       0x47, 0x50, 0x20, 0x53,
    0x45,       0x20, 0x41,       0x63, 0x63, 0x20, 0x43, 0x74, 0x6C, (char)0xA0, 0x00, 0x04, 0x00};
// ACMF
static const std::string ACCESS_CONTROL_MAIN_DATA = {
    0x30, 0x10, 0x04, 0x08, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x30, 0x04, 0x04, 0x02, 0x43, 0x00};
static const std::string ACCESS_CONTROL_MAIN_DATA2 = {
    0x30, 0x10, 0x04, 0x08, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, (char)0xFF, 0x30, 0x04, 0x04, 0x02, 0x43, 0x00};
static const std::string ACCESS_CONTROL_MAIN_DATA_REFRESH_TAG_LENGTH_ERROR = {
    0x30, 0x10, 0x04, 0x07, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x30, 0x04, 0x04, 0x02, 0x43, 0x00};
static const std::string ACCESS_CONTROL_RULES_PATH = {0x43, 0x00};
// ACRF
static const std::string ACCESS_CONTROL_RULES_DATA = {0x30,
                                                      0x10,
                                                      (char)0xA0,
                                                      0x08,
                                                      0x04,
                                                      0x06,
                                                      (char)0xA0,
                                                      0x00,
                                                      0x00,
                                                      0x01,
                                                      0x51,
                                                      0x01,
                                                      0x30,
                                                      0x04,
                                                      0x04,
                                                      0x02,
                                                      0x43,
                                                      (char)0x80};
static const std::string ACCESS_CONTROL_RULES_DATA2 = {
    0x30, 0x08, (char)0x81, 0x00, 0x30, 0x04, 0x04, 0x02, 0x43, (char)0x81};
static const std::string ACCESS_CONTROL_RULES_DATA3 = {
    0x30, 0x08, (char)0x82, 0x00, 0x30, 0x04, 0x04, 0x02, 0x43, (char)0x82};
static const std::string ACCESS_CONTROL_RULES_DATA_UNKNOWN_TAG = {
    0x30, 0x08, (char)0x8F, 0x00, 0x30, 0x04, 0x04, 0x02, 0x43, (char)0x82};
// ACCF
static const std::string ACCESS_CONTROL_CONDITIONS_DATA = {0x30, 0x16, 0x04, 0x14, 0x00, 0x00, 0x00, 0x00,
                                                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                                           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_APDU_ALWAYS = {
    0x30, 0x1D, 0x04, 0x14, 0x22, 0x22, 0x22, 0x22, 0x22,       0x22, 0x22,       0x22, 0x22,       0x22, 0x22, 0x22,
    0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, (char)0xA0, 0x05, (char)0xA0, 0x03, (char)0x80, 0x01, 0x01};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_INVALID_APDU = {
    0x30, 0x1D, 0x04, 0x14, 0x22, 0x22, 0x22, 0x22, 0x22,       0x22, 0x22,       0x22, 0x22,       0x22, 0x22, 0x22,
    0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, (char)0xA0, 0x05, (char)0xA0, 0x03, (char)0x88, 0x01, 0x01};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_APDU_FILTER = {
    0x30,       0x35, 0x04,       0x14,       0x22,       0x22, 0x22,       0x22,       0x22,       0x22,
    0x22,       0x22, 0x22,       0x22,       0x22,       0x22, 0x22,       0x22,       0x22,       0x22,
    0x22,       0x22, 0x22,       0x22,       (char)0xA0, 0x1D, (char)0xA0, 0x16,       (char)0xA1, 0x14,
    0x04,       0x08, (char)0x80, (char)0xF2, 0x00,       0x00, (char)0xFF, (char)0xFF, (char)0xFF, (char)0xFF,
    0x04,       0x08, (char)0x80, (char)0xCA, 0x00,       0x00, (char)0xFF, (char)0xFF, 0x00,       0x00,
    (char)0xA1, 0x03, (char)0x80, 0x01,       0x00};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_INVALID_APDU_FILTER = {
    0x30,       0x35, 0x04,       0x14,       0x22,       0x22, 0x22,       0x22,       0x22,       0x22,
    0x22,       0x22, 0x22,       0x22,       0x22,       0x22, 0x22,       0x22,       0x22,       0x22,
    0x22,       0x22, 0x22,       0x22,       (char)0xA0, 0x1D, (char)0xA0, 0x16,       (char)0xA1, 0x14,
    0x04,       0x08, (char)0x88, (char)0xF2, 0x00,       0x00, (char)0xFF, (char)0xFF, (char)0xFF, (char)0xFF,
    0x04,       0x08, (char)0x80, (char)0xCA, 0x00,       0x00, (char)0xFF, (char)0xFF, 0x00,       0x00,
    (char)0xA1, 0x03, (char)0x80, 0x01,       0x00};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_INVALID_NFC = {
    0x30,       0x22, 0x04,       0x14, 0x22,       0x22, 0x22, 0x22,       0x22, 0x22,       0x22, 0x22,
    0x22,       0x22, 0x22,       0x22, 0x22,       0x22, 0x22, 0x22,       0x22, 0x22,       0x22, 0x22,
    (char)0xA0, 0x0A, (char)0xA0, 0x03, (char)0x80, 0x01, 0x01, (char)0xA1, 0x03, (char)0x88, 0x01, 0x01};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_INVALID_TAG = {
    0x30, 0x1D, 0x04, 0x14, 0x22, 0x22, 0x22, 0x22, 0x22,       0x22, 0x22,       0x22, 0x22,       0x22, 0x22, 0x22,
    0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, (char)0xA0, 0x05, (char)0xA8, 0x03, (char)0x80, 0x01, 0x01};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_ALL = {0x30, 0x00};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_HASH_LENGTH_ERROR = {
    0x30, 0x15, 0x04, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_NO_VALID_INFO = {
    0x30, 0x16, (char)0xEF, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00,       0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
static const std::string ACCESS_CONTROL_CONDITIONS_DATA_EMPTY = {};

// EF
static const std::string EF_SIM_EF_TRANSPARENT = {
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00};
static const std::string EF_SIM_EF_TRANSPARENT_ODF = {
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00};
static const std::string EF_SIM_EF_TRANSPARENT_DODF = {
    0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00};
static const std::string EF_SIM_EF_TRANSPARENT_ACMF = {
    0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00};
static const std::string EF_SIM_EF_TRANSPARENT_ACRF = {
    0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00};
static const std::string EF_SIM_EF_TRANSPARENT_ACCF = {
    0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00};
static const std::string EF_SIM_EF_LINEAR_FIXED = {
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00};
static const std::string EF_SIM_UNKNOWN_UNKNOWN = {
    0x00, 0x00, 0x00, 0x02, 0x00, 0x00, (char)0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, (char)0xFF, 0x01, 0x00};
static const std::string EF_USIM_EF_TRANSPARENT = {
    0x62, 0x0B, (char)0x80, 0x02, 0x01, 0x00, (char)0x82, 0x05, 0x01, 0x00, 0x00, 0x01, 0x01};
static const std::string EF_USIM_EF_LINEAR_FIXED = {
    0x62, 0x0B, (char)0x80, 0x02, 0x01, 0x00, (char)0x82, 0x05, 0x02, 0x00, 0x00, 0x01, 0x01};
static const std::string EF_USIM_UNKNOWN_UNKNOWN = {
    0x62, 0x0E, (char)0x80, 0x02, 0x01, 0x00, (char)0x82, 0x05, 0x38, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01};

static const std::string RESPONSE_REFERESH_TAG_D0 = {
    (char)0xDF, 0x20, 0x08, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, (char)0x90, 0x00};
static const std::string REFERESH_TAG = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};
static const std::string NOT_RESPONSE_REFERESH_TAG_D0 = {0x01, 0x01, 0x01, (char)0x90, 0x00};
static const std::string APDU_ERROR_RESPONSE = {0x68, (char)0x95};
static const std::string RESPONSE_ALL = {(char)0xFF, 0x40,       0x20, (char)0xE2, 0x1E, (char)0xE1, 0x14, 0x4F,
                                         0x10,       (char)0xA0, 0x00, 0x00,       0x03, 0x33,       0x01, 0x01,
                                         0x02,       0x00,       0x63, 0x48,       0x57, 0x50,       0x41, 0x59,
                                         0x05,       (char)0xC1, 0x00, (char)0xE3, 0x06, (char)0xD0, 0x01, 0x01,
                                         (char)0xD1, 0x01,       0x01, (char)0x90, 0x00};
static const std::string RESPONSE_ALL2 = {
    (char)0xFF, 0x40,       0x34,       (char)0xE2, 0x32,       (char)0xE1, 0x28,       0x4F,       0x10,
    (char)0xA0, 0x00,       0x00,       0x03,       0x33,       0x01,       0x01,       0x02,       0x00,
    0x63,       0x48,       0x57,       0x50,       0x41,       0x59,       0x05,       (char)0xC1, 0x14,
    0x01,       (char)0xB3, 0x07,       (char)0xAC, (char)0xBA, 0x4F,       0x54,       (char)0xF5, 0x5A,
    (char)0xAF, (char)0xC3, 0x3B,       (char)0xB0, 0x6B,       (char)0xBB, (char)0xF6, (char)0xCA, (char)0x80,
    0x3E,       (char)0x9A, (char)0xE3, 0x06,       (char)0xD0, 0x01,       0x01,       (char)0xD1, 0x01,
    0x01,       (char)0x90, 0x00};
static const std::string RESPONSE_ALL_FOR_NEXT = {
    (char)0xFF, 0x40,       (char)0x81, (char)0xFF, (char)0xE2, 0x1E,       (char)0xE1, 0x14,       0x4F,
    0x10,       (char)0xA0, 0x00,       0x00,       0x03,       0x33,       0x01,       0x01,       0x02,
    0x00,       0x63,       0x48,       0x57,       0x50,       0x41,       0x59,       0x05,       (char)0xC1,
    0x00,       (char)0xE3, 0x06,       (char)0xD0, 0x01,       0x01,       (char)0xD1, 0x01,       0x01,
    (char)0xE2, 0x2B,       (char)0xE1, 0x21,       0x4F,       0x09,       (char)0xA0, 0x00,       0x00,
    0x01,       0x51,       0x43,       0x52,       0x53,       0x00,       (char)0xC1, 0x14,       0x05,
    (char)0x9E, 0x24,       (char)0x80, (char)0xAD, (char)0xF8, (char)0xC1, (char)0xC5, (char)0xB3, (char)0xD9,
    (char)0xEC, 0x00,       0x76,       0x45,       (char)0xCC, (char)0xFC, 0x44,       0x2A,       0x23,
    (char)0xC5, (char)0xE3, 0x06,       (char)0xD0, 0x01,       0x01,       (char)0xD1, 0x01,       0x01,
    (char)0xE2, 0x22,       (char)0xE1, 0x18,       0x4F,       0x00,       (char)0xC1, 0x14,       0x05,
    (char)0x9E, 0x24,       (char)0x80, (char)0xAD, (char)0xF8, (char)0xC1, (char)0xC5, (char)0xB3, (char)0xD9,
    (char)0xEC, 0x00,       0x76,       0x45,       (char)0xCC, (char)0xFC, 0x44,       0x2A,       0x23,
    (char)0xC5, (char)0xE3, 0x06,       (char)0xD0, 0x01,       0x01,       (char)0xD1, 0x01,       0x01,
    (char)0xE2, 0x32,       (char)0xE1, 0x28,       0x4F,       0x10,       (char)0xA0, 0x00,       0x00,
    0x03,       0x33,       0x00,       0x53,       0x44,       0x01,       0x21,       0x56,       0x11,
    0x26,       0x24,       0x10,       0x00,       (char)0xC1, 0x14,       0x53,       0x6C,       0x79,
    (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,       (char)0xAE, 0x36,       0x5D,
    (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x35,       (char)0xE3,
    0x06,       (char)0xD0, 0x01,       0x01,       (char)0xD1, 0x01,       0x01,       (char)0xE2, 0x2B,
    (char)0xE1, 0x21,       0x4F,       0x09,       (char)0xA0, 0x00,       0x00,       0x01,       0x51,
    0x43,       0x52,       0x53,       0x00,       (char)0xC1, 0x14,       0x53,       0x6C,       0x79,
    (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,       (char)0xAE, 0x36,       0x5D,
    (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x35,       (char)0xE3,
    0x06,       (char)0xD0, 0x01,       0x01,       (char)0xD1, 0x01,       0x01,       (char)0xE2, 0x2B,
    (char)0xE1, 0x21,       0x4F,       0x09,       (char)0xA0, 0x00,       0x00,       0x01,       0x51,
    0x41,       0x43,       0x4C,       0x08,       (char)0xC1, 0x14,       0x53,       0x6C,       0x79,
    (char)0xB9, 0x3A,       (char)0xCF, (char)0xBE, (char)0xA9, 0x50,       (char)0xAE, 0x36,       0x5D,
    (char)0x8C, (char)0xE1, (char)0xAE, (char)0xF9, 0x1F,       (char)0xEA, (char)0x95, 0x35,       (char)0xE3,
    0x06,       (char)0xD0, 0x01,       0x01,       (char)0x90, 0x00};
static const std::string RESPONSE_NEXT = {(char)0xD1, 0x01, 0x01, (char)0x90, 0x00};