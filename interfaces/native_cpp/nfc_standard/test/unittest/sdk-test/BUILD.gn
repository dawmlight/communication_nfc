#
# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
import("//base/account/os_account/os_account.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("//foundation/communication/nfc/services/nfc_standard/nfc_standard.gni")

SDK_UNIT_TEST_DIR = "$NFC_AGENT_DIR/test/unittest/sdk-test"

config("sdk_unit_test_config") {
  visibility = [ ":*" ]

  include_dirs = [
        "//utils/native/base/include",
        "//foundation/distributedschedule/safwk/services/safwk/include",
        "$NFC_ST_DIR/include/system-nfc",
        "$NFC_ST_DIR/include/stnfc/include/hardware/st21nfc/gki/ulinux",
        "$NFC_ST_DIR/include/stnfc/include/hardware/st21nfc/include",
        "$NFC_ST_DIR/include/stnfc/include/src/include",
        "$NFC_ST_DIR/include/stnfc/include/src/gki/ulinux",
        "$NFC_ST_DIR/include/stnfc/include/src/gki/common",
        "$NFC_ST_DIR/include/stnfc/include/src/nfc/include",
        "$NFC_ST_DIR/include/stnfc/include/src/nfa/include",
        "$NFC_ST_DIR/include/stnfc/include/utils/include",
        "$NFC_OSAL_DIR/include",
        "$NFC_AGENT_DIR/include",
        "$NFC_AGENT_DIR/src",
        "$NFC_AGENT_DIR/src/sdk-reader/include",
        "$NFC_AGENT_DIR/src/sdk-reader/src",
        "$NFC_STANDARD_DIR/include",
        "$NFC_STANDARD_DIR/src",
        "$NFC_STANDARD_DIR/src/service-ncibal/include",
        "$NFC_STANDARD_DIR/src/service-ncibal/src",
        "$NFC_STANDARD_DIR/src/service-reader/include",
        "$NFC_STANDARD_DIR/src/service-reader/src",
        "include",
        "src"
    ]

    defines = [ "DEBUG", "_NFC_SERVICE_READER_", "ST21NFC", "VENDOR_BUILD_FOR_FACTORY" , "_NFC_SERVICE_HCE_", "USE_HILOG"]

    cflags_cc = [ "-fexceptions" ]
}

unit_test_deps = [
    "//foundation/communication/nfc/prebuilts/librarys/nfc_st:nfc_nci_dep",
    "//foundation/communication/nfc/interfaces/native_cpp/osal:osal",
    "//foundation/communication/nfc/interfaces/native_cpp/nfc_standard:nfc_agent",
    "//foundation/communication/nfc/services/nfc_standard:nfc_standard",
    "//third_party/googletest:gtest_main",
    "//third_party/googletest:gmock_main",
    "//utils/native/base:utils",
    "//foundation/distributedschedule/dmsfwk/interfaces/innerkits/uri:zuri",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/aafwk/standard/services/abilitymgr:abilityms",
    "//foundation/appexecfwk/standard/kits:appkit_native",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
]

unit_test_external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "aafwk_standard:base",
    "aafwk_standard:ability_manager",
    "aafwk_standard:want",
    "samgr_L2:samgr_proxy",
    "appexecfwk_standard:appexecfwk_base",
    "appexecfwk_standard:appexecfwk_core",
    "appexecfwk_standard:libeventhandler",

]

ohos_unittest("SdkUnitTest") {
    module_out_path = "nfc/service"

    sources = [
        "$SDK_UNIT_TEST_DIR/src/main.cpp",
        "$SDK_UNIT_TEST_DIR/src/ohos_gtest_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/iso15693_tag_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/isodep_tag_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/mifare_classic_tag_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/mifare_ultralight_tag_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/ndef_formatable_tag_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/ndef_message_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/ndef_tag_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/nfc_ability_manager_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/nfc_agent_test.cpp",
        "$SDK_UNIT_TEST_DIR/src/tag_data.cpp",
        "$SDK_UNIT_TEST_DIR/src/tag_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/apdu_channel_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/card_emulation_agent_proxy_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/card_emulation_service_info_lite_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/host_card_emulation_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/card_emulation_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/offhost_card_emulation_test.cpp",
    ]

    configs = [ ":sdk_unit_test_config" ]

    deps = unit_test_deps
    external_deps = unit_test_external_deps

    part_name = "nfc_standard"
    subsystem_name = "communication"
}

ohos_unittest("sdk_cardemulation_unittest") {
    module_out_path = "nfc/service"

    sources = [
        "$SDK_UNIT_TEST_DIR/src/main.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/apdu_channel_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/card_emulation_agent_proxy_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/card_emulation_service_info_lite_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/host_card_emulation_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/card_emulation_test.cpp",
"$SDK_UNIT_TEST_DIR/src/sdk-cardemulation/offhost_card_emulation_test.cpp",
    ]

    configs = [ ":sdk_unit_test_config" ]

    deps = unit_test_deps
    external_deps = unit_test_external_deps

    part_name = "nfc_standard"
    subsystem_name = "communication"
}

group("sdk_unit_test") {
    testonly = true
    deps = [
        #":SdkUnitTest",
        ":sdk_cardemulation_unittest"
    ]
}
