#
# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import("//build/ohos.gni")
import("//foundation/communication/nfc/nfc_standard.gni")

NFC_SA_TEST_DIR = "$NFC_AGENT_DIR/test/nfc_sa_demo"

config("testcase_config") {
    defines = [ "DEBUG", "_NFC_SERVICE_READER_" ]

    include_dirs = [
        "//utils/native/base/include",
        "//foundation/distributedschedule/safwk/services/safwk/include",
        "$NFC_OSAL_DIR/include",
        "$NFC_AGENT_DIR/include",
        "$NFC_STANDARD_DIR/include",
        "include",
    ]
}

ohos_source_set("nfc_sa_source_set") {
    public_configs = [
        ":testcase_config",
    ]

    sources = [
        "$NFC_SA_TEST_DIR/src/sa_nfc_main.cpp",
        "$NFC_SA_TEST_DIR/src/nfc_test_env.cpp",
        "$NFC_SA_TEST_DIR/src/test_nfc_ability.cpp",
        "$NFC_SA_TEST_DIR/src/test_nfc_mifareultralight.cpp",
        "$NFC_SA_TEST_DIR/src/test_nfc_reader.cpp",
        "$NFC_SA_TEST_DIR/src/test_nfc_reader_app.cpp",
        "$NFC_SA_TEST_DIR/src/test_nfc_isodep.cpp",
        "$NFC_SA_TEST_DIR/src/test_nfc_mifareclassic.cpp",
        "$NFC_SA_TEST_DIR/src/test_nfc_ndef.cpp",
        "$NFC_SA_TEST_DIR/src/test_nfc_iso15693.cpp",
    ]

    cflags = []
    if (target_cpu == "arm") {
        cflags += [ "-DBINDER_IPC_32BIT" ]
    }

    deps = [
        "//foundation/communication/nfc/interfaces/native_cpp/osal:osal",
        "//foundation/communication/nfc/interfaces/native_cpp/nfc_standard:nfc_agent",
        "//base/notification/ces_standard/cesfwk/kits/native:cesfwk_kits",
        "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
        "//foundation/appexecfwk/standard/kits:appkit_native",
        "//utils/native/base:utils",
    ]

    external_deps = [
        "hiviewdfx_hilog_native:libhilog",
        "ipc:ipc_core",
        "aafwk_standard:ability_manager",
        "aafwk_standard:want",
        "appexecfwk_standard:appexecfwk_base",
        "appexecfwk_standard:appexecfwk_core",
        "appexecfwk_standard:libeventhandler"        
    ]
}

ohos_executable("nfcsademo") {
    deps = [
        ":nfc_sa_source_set",
    ]

    install_enable = true
    part_name = "nfc_standard"
    subsystem_name = "communication"
}

group("nfc_sa_demo") {
    deps = [
        ":nfcsademo",
    ]
}
